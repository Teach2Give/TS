# To securely generate values for ACCESS_TOKEN_SECRET and REFRESH_TOKEN_SECRET, you can use a cryptographic random string generator. In a production environment, it's recommended to generate these secrets using tools like OpenSSL or Node.js's built-in crypto module.
# const crypto = require('crypto');

# // Generate a secure random string for ACCESS_TOKEN_SECRET
# const accessTokenSecret = crypto.randomBytes(64).toString('hex');

# // Generate a secure random string for REFRESH_TOKEN_SECRET
# const refreshTokenSecret = crypto.randomBytes(64).toString('hex');

# console.log('ACCESS_TOKEN_SECRET:', accessTokenSecret);
# console.log('REFRESH_TOKEN_SECRET:', refreshTokenSecret);
ACCESS_TOKEN_SECRET=f17d8b1b9b1e412b3b1c6a4b69d9389bb089b47e8c617f8a50e742d98753b658
REFRESH_TOKEN_SECRET=a6c5e012a9d5ef6d3e8178a1d9b6a239a7a63571b5c1170f76e43c46b68e27b2
JWT_EXPIRES_IN=15m  # Example token expiration setting
